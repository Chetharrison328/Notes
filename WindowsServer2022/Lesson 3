#   Active Directory Domain Services (AD DS)
Module: Overview of AD DS | Workgroups vs Domains | Domain Controllers | User & Group   

---

##   What I Learned

- The difference between **Workgroups** and **Domains** (types of network models)
- Core concepts of **Active Directory Domain Services (AD DS)**
- Logical and physical components of Active Directory
- Key AD objects: users, groups, computers
- How to install AD DS and promote a server to a domain controller
- How to create users and groups using Active Directory Users & Computers

---

##   Questions I Had

- When should I use an OU vs a security group?
- What are some real-world examples of forests vs domain trees?
- How is a Read-Only Domain Controller (RODC) secured in a branch office setup?
- How do domain trusts work across forests?

---

##   How Things Connected

- **Workgroup vs Domain** helped explain why centralized identity is critical in enterprise environments.
- **Domain Controllers** tie into centralized authentication and **Group Policy**, forming the backbone of enterprise security.
- **Logical vs Physical components** helped me understand how design and infrastructure align.
- Installing AD DS made the abstract terms (like "forest" and "object") more practical and visible in real tools.
- Creating users and groups showed how **IAM starts at the OS-level** before scaling into cloud IAM tools like Entra ID.

---

##   What I Need to Try Next

- Build a mini lab to:
  - Create a new domain in VirtualBox/Hyper-V
  - Add multiple users and organize them into OUs and groups
  - Test permission delegation with Group Policy
- Document the forest/domain structure visually
- Practice with Read-Only Domain Controller setup
- Compare AD DS to Microsoft Entra ID (formerly Azure AD) to see differences/similarities

---

##  Real-World Application / Use Case

- **Workgroups** are great for small businesses with <10 PCs, but **Domains** are required for scalable, secure enterprise setups.
- Every corporate environment uses **AD DS or Entra ID** to handle authentication, making this foundational for **IAM engineering**.
- Understanding **users, groups, and policies** in AD is a direct precursor to managing **cloud-based IAM tools**.
- **Domain Controllers** are a real-world example of centralized IAM systems that mirror how modern tools like Entra, Okta, and CyberArk work.
- These skills apply to IT support, sysadmin, security analyst, and IAM engineer roles.

---


# Lesson 3 – Active Directory (Continued)

## 1. What I Learned

- **Joining a Desktop Experience Server to a Domain**
  - Watched the video, but couldn’t do the hands-on part because I’m using VirtualBox (not Hyper-V Manager).
  - Hyper-V and VirtualBox can't be installed on the same system simultaneously.

- **Joining a Core Server to the Domain**
  - Also required Hyper-V Manager, so I wasn’t able to complete this demo.

- **Organizational Units (OUs) vs Containers**
  - **Containers**:
    - Used to group system objects within a domain.
    - Cannot have Group Policy Objects (GPOs) applied.
    - Default location for new objects.
  - **Organizational Units (OUs)**:
    - Used to configure objects by assigning GPOs.
    - Allow delegation of administrative permissions.

- **Domain Controllers**:
  - Host the AD DS database (`Ntds.dit`) and SYSVOL.
  - Provide Kerberos authentication and Key Distribution Center (KDC) services.
  - Best Practice: Use at least **two domain controllers** per domain for availability.

- **Global Catalog**:
  - Stores a **partial attribute set** for all domains in the forest.
  - Enables **forest-wide queries**.
  - Best Practices:
    - In a **single domain**, configure all domain controllers as global catalog servers.
    - In **multi-site environments**, ensure **at least one domain controller per site** is a global catalog server.

---

## 2. Questions I Had

- Are there any workarounds or tools to simulate Hyper-V labs while using VirtualBox?
- Can I create test OUs to mimic container behavior, or are containers only system-managed?

---

## 3. How Things Connected

- The difference between **OUs** and **containers** helped me understand why certain GPOs might not apply as expected.
- Seeing how domain controllers host **authentication services** tied everything back to user login and access control.
- The **global catalog** explains how larger organizations manage seamless logins and object searches across domains.

---

## 4. What I Need to Try Next

- Research how to simulate or practice Hyper-V-based labs on my current setup.
- Practice creating OUs, assigning users, and applying GPOs.
- Document the difference between default containers and custom OUs in a homelab.

---

## 5. Real-World Application / Use Case

- IT teams use **OUs** to apply policies like password rules, desktop restrictions, or software deployments by department.
- **Multiple domain controllers** provide fault tolerance so authentication services remain available if one server fails.
- The **global catalog** enables fast lookups and login validations across different branches of a company.